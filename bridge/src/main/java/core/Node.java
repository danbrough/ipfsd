// Code generated by gobind. DO NOT EDIT.

// Java class core.Node is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/ipfs-shipyard/gomobile-ipfs/go/bind/core
package core;

import go.Seq;

public final class Node implements Seq.Proxy {
	static { Core.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	public Node(Repo r) {
		this.refnum = __NewNode(r);
		Seq.trackGoRef(refnum, this);
	}
	
	private static native int __NewNode(Repo r);
	
	Node(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public native void close() throws Exception;
	public native void serveConfigAPI() throws Exception;
	public native String serveMultiaddr(String smaddr) throws Exception;
	/**
	 * Serve API on the given port and return the current listening maddr
	 */
	public native String serveTCPAPI(String port) throws Exception;
	public native void serveUnixSocketAPI(String sockpath) throws Exception;
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof Node)) {
		    return false;
		}
		Node that = (Node)o;
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("Node").append("{");
		return b.append("}").toString();
	}
}

